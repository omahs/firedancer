---
- name: Set solana genesis binary
  ansible.builtin.set_fact:
    genesis: "{{ workdir }}/solana-genesis"

- name: Archive current ledger
  ansible.builtin.archive:
    path: "{{ ledger }}"
    dest: "{{ ledger }}_{{ ansible_date_time.epoch }}.tar.gz"
    format: gz

- name: Remove current ledger
  ansible.builtin.file:
    path: "{{ ledger }}"
    state: absent

- name: Generate Genesis
  ansible.builtin.shell: >
    {{ genesis }}
    --cluster-type {{ cluster_type }}
    --ledger {{ ledger }}
    --enable-warmup-epochs
    --bootstrap-validator "{{ keys_dir }}/id.json" "{{ keys_dir }}/vote.json" "{{ keys_dir }}/stake.json"
    --bootstrap-stake-authorized-pubkey "{{ keys_dir }}/id.json"
    --bootstrap-validator-lamports {{ bootstrap_validator_lamports }}
    --bootstrap-validator-stake-lamports {{ bootstrap_validator_stake_lamports }}
    --faucet-pubkey {{ faucet }}
    --faucet-lamports {{ faucet_lamports }}
  register: genesis_output

- name: Extract Genesis Hash
  ansible.builtin.set_fact:
    genesis_hash: "{{ genesis_output.stdout | regex_search('Genesis hash: (.+?)\\n', '\\1') | first | trim }} "
  failed_when: genesis_hash is not defined

- name: Extract Shred Version
  ansible.builtin.set_fact:
    shred_version: "{{ genesis_output.stdout | regex_search('Shred version: (.+?)\\n', '\\1') | first | trim }} "
  failed_when: shred_version is not defined

- name: Display genesis info
  ansible.builtin.debug:
    msg:
    - "Genesis Hash = {{ genesis_hash }}"
    - "Shred Version = {{ shred_version }}"

- name: Create genesis config
  ansible.builtin.copy:
    dest: "{{ genesis_cfg }}"
    content: |
      genesis_hash: {{ genesis_hash }}
      shred_version: {{ shred_version }}
  when:
  - shred_version is defined
  - genesis_hash is defined
